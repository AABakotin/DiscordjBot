package ru.discordj.bot.informer.query;

import java.util.Map;

/**
 * Интерфейс для запросов к игровым серверам.
 * Определяет методы для получения информации о состоянии серверов различных игр.
 * Реализации этого интерфейса должны поддерживать конкретные протоколы запросов
 * (например, Source Query Protocol).
 */
public interface GameServerQuery {

    /**
     * Выполняет запрос к игровому серверу и получает информацию о его состоянии.
     *
     * @param ip IP-адрес сервера
     * @param port порт сервера
     * @return Map с информацией о сервере, содержащий следующие ключи:
     *         - name: название сервера
     *         - map: текущая карта
     *         - players: количество игроков в формате "текущее/максимальное"
     *         и другие параметры в зависимости от типа сервера.
     *         В случае ошибки возвращает пустой Map.
     */
    Map<String, String> query(String ip, int port);

    /**
     * Возвращает название протокола, используемого для запросов.
     *
     * @return строковое название протокола (например, "source", "gamespy")
     */
    String getProtocolName();

    /**
     * Проверяет, поддерживает ли данный обработчик указанную игру.
     *
     * @param game название игры
     * @return true если игра поддерживается, false в противном случае
     */
    boolean supportsGame(String game);
} 