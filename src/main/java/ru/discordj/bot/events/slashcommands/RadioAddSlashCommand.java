package ru.discordj.bot.events.slashcommands;

import net.dv8tion.jda.api.Permission;
import net.dv8tion.jda.api.events.interaction.command.SlashCommandInteractionEvent;
import net.dv8tion.jda.api.interactions.commands.OptionType;
import net.dv8tion.jda.api.interactions.commands.build.OptionData;
import ru.discordj.bot.events.ICommand;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.TimeUnit;

/**
 * Slash-–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–∏ –≤ —Å–ø–∏—Å–æ–∫.
 * –î–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º —Å–µ—Ä–≤–µ—Ä–∞.
 */
public class RadioAddSlashCommand implements ICommand {
    
    @Override
    public String getName() {
        return "radio_add";
    }
    
    @Override
    public String getDescription() {
        return "–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏—é –≤ —Å–ø–∏—Å–æ–∫";
    }
    
    @Override
    public List<OptionData> getOptions() {
        List<OptionData> options = new ArrayList<>();
        
        options.add(new OptionData(OptionType.STRING, "name", "–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–∏", true));
        options.add(new OptionData(OptionType.STRING, "url", "URL –ø–æ—Ç–æ–∫–∞ —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–∏", true));
        options.add(new OptionData(OptionType.STRING, "description", "–û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–∏", true));
        options.add(new OptionData(OptionType.STRING, "category", "–ö–∞—Ç–µ–≥–æ—Ä–∏—è (–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ/Record/–î—Ä—É–≥–∏–µ)", true));
        
        return options;
    }
    
    @Override
    public void execute(SlashCommandInteractionEvent event) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–º–µ–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        if (!event.getMember().hasPermission(Permission.ADMINISTRATOR)) {
            event.reply("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º —Å–µ—Ä–≤–µ—Ä–∞.")
                .setEphemeral(true)
                .queue(response -> {
                    response.deleteOriginal().queueAfter(10, TimeUnit.SECONDS);
                });
            return;
        }
        
        // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ –∫–æ–º–∞–Ω–¥—ã
        String name = event.getOption("name").getAsString();
        String url = event.getOption("url").getAsString();
        String description = event.getOption("description").getAsString();
        String category = event.getOption("category").getAsString();
        
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏—è —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º
            if (RadioSlashCommand.hasStation(name)) {
                event.reply("‚ùå –†–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏—è —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º **" + name + "** —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
                    .setEphemeral(true)
                    .queue();
                return;
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º URL –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å
            if (!url.startsWith("http")) {
                event.reply("‚ùå URL –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å http:// –∏–ª–∏ https://")
                    .setEphemeral(true)
                    .queue();
                return;
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
            if (!category.equals("–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ") && !category.equals("Record") && !category.equals("–î—Ä—É–≥–∏–µ")) {
                event.reply("‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ–¥–Ω–æ–π –∏–∑: –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ, Record, –î—Ä—É–≥–∏–µ")
                    .setEphemeral(true)
                    .queue();
                return;
            }
            
            // –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏—é
            RadioSlashCommand.addRadioStation(name, url, description, category);
            
            // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
            StringBuilder successMessage = new StringBuilder();
            successMessage.append("‚úÖ –†–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!\n\n");
            successMessage.append("üìª **").append(name).append("**\n");
            successMessage.append("üîó URL: `").append(url).append("`\n");
            successMessage.append("üìù –û–ø–∏—Å–∞–Ω–∏–µ: ").append(description).append("\n");
            successMessage.append("üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ").append(category).append("\n\n");
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —Å—Ç–∞–Ω—Ü–∏–π
            int totalStations = RadioSlashCommand.getStationsCount();
            successMessage.append("üìä –í—Å–µ–≥–æ —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–π: ").append(totalStations);
            
            // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –ª–∏–º–∏—Ç–µ Discord
            if (totalStations > 25) {
                successMessage.append("\n‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –≤ –º–µ–Ω—é –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 25 —Å—Ç–∞–Ω—Ü–∏–π –∏–∑ ")
                    .append(totalStations).append(" –∏–∑-–∑–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π Discord.");
            }
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –æ–ø–µ—Ä–∞—Ü–∏–∏
            event.reply(successMessage.toString())
                .setEphemeral(true)
                .queue();
            
        } catch (Exception e) {
            // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–π
            System.err.println("–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–∏: " + e.getMessage());
            e.printStackTrace();
            
            event.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–∏: " + e.getMessage())
                .setEphemeral(true)
                .queue();
        }
    }
} 