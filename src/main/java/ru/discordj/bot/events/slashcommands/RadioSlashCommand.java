package ru.discordj.bot.events.slashcommands;

import net.dv8tion.jda.api.entities.GuildVoiceState;
import net.dv8tion.jda.api.entities.Member;
import net.dv8tion.jda.api.events.interaction.command.SlashCommandInteractionEvent;
import net.dv8tion.jda.api.events.interaction.component.StringSelectInteractionEvent;
import net.dv8tion.jda.api.interactions.commands.OptionType;
import net.dv8tion.jda.api.interactions.commands.build.OptionData;
import net.dv8tion.jda.api.interactions.components.ActionRow;
import net.dv8tion.jda.api.interactions.components.selections.StringSelectMenu;
import net.dv8tion.jda.api.managers.AudioManager;
import net.dv8tion.jda.api.interactions.callbacks.IReplyCallback;
import ru.discordj.bot.events.ICommand;
import ru.discordj.bot.lavaplayer.PlayerManager;
import ru.discordj.bot.utility.MessageCollector;

import java.util.*;
import java.util.concurrent.TimeUnit;

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ slash-–∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–π.
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏—é –∏–∑ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.
 */
public class RadioSlashCommand implements ICommand {
    
    // –°–ª–æ–≤–∞—Ä—å —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–π (–Ω–∞–∑–≤–∞–Ω–∏–µ –∏ URL-–ø–æ—Ç–æ–∫)
    private static final Map<String, String> RADIO_STATIONS = new LinkedHashMap<>();
    
    static {
        // –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–∏
        RADIO_STATIONS.put("–ï–≤—Ä–æ–ø–∞ –ü–ª—é—Å", "http://ep128.hostingradio.ru:8030/ep128");
        RADIO_STATIONS.put("–†—É—Å—Å–∫–æ–µ –†–∞–¥–∏–æ", "http://rusradio.hostingradio.ru/rusradio96.aacp");
        RADIO_STATIONS.put("–†–∞–¥–∏–æ Energy", "http://ic7.101.ru:8000/v4_1");
        RADIO_STATIONS.put("–•–∏—Ç FM", "http://hitfm.hostingradio.ru/hitfm96.aacp");
        RADIO_STATIONS.put("–†–µ—Ç—Ä–æ FM", "http://retro.hostingradio.ru:8043/retro256.mp3");
        
        // Radio Record - –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –ø–æ—Ç–æ–∫–∏
        RADIO_STATIONS.put("–†–µ–∫–æ—Ä–¥", "https://radiorecord.hostingradio.ru/rr96.aacp");
        RADIO_STATIONS.put("Russian Mix", "https://radiorecord.hostingradio.ru/rus96.aacp");
        RADIO_STATIONS.put("Deep", "https://radiorecord.hostingradio.ru/deep96.aacp");
        RADIO_STATIONS.put("Techno", "https://radiorecord.hostingradio.ru/techno96.aacp");
        RADIO_STATIONS.put("Trap", "https://radiorecord.hostingradio.ru/trap96.aacp");
        RADIO_STATIONS.put("Dubstep", "https://radiorecord.hostingradio.ru/dub96.aacp");
        RADIO_STATIONS.put("Hardstyle", "https://radiorecord.hostingradio.ru/teo96.aacp");
        RADIO_STATIONS.put("Breaks", "https://radiorecord.hostingradio.ru/brks96.aacp");
        RADIO_STATIONS.put("–°—É–ø–µ—Ä–¥–∏—Å–∫–æ—Ç–µ–∫–∞ 90-—Ö", "https://radiorecord.hostingradio.ru/sd9096.aacp");
        RADIO_STATIONS.put("–ì–æ–ø FM", "https://radiorecord.hostingradio.ru/gop96.aacp");
        RADIO_STATIONS.put("–†—É–∫–∏ –í–≤–µ—Ä—Ö!", "https://radiorecord.hostingradio.ru/rv96.aacp");
        RADIO_STATIONS.put("Hypnotic", "https://radiorecord.hostingradio.ru/hypno96.aacp");
        RADIO_STATIONS.put("–†–æ–∫", "https://radiorecord.hostingradio.ru/rock96.aacp");
        RADIO_STATIONS.put("Chill-Out", "https://radiorecord.hostingradio.ru/chil96.aacp");
        RADIO_STATIONS.put("Synthwave", "https://radiorecord.hostingradio.ru/synth96.aacp");
        
        // –î—Ä—É–≥–∏–µ —Å—Ç–∞–Ω—Ü–∏–∏
        RADIO_STATIONS.put("DFM", "http://dfm.hostingradio.ru/dfm96.aacp");
        RADIO_STATIONS.put("–†–∞–¥–∏–æ MAXIMUM", "http://maximum.hostingradio.ru/maximum96.aacp");
        RADIO_STATIONS.put("Lofi Hip Hop", "http://hyades.shoutca.st:8043/stream");
        RADIO_STATIONS.put("Nightwave Plaza", "https://radio.plaza.one/mp3");
        RADIO_STATIONS.put("–†–∞–¥–∏–æ –≠—Ä–º–∏—Ç–∞–∂", "https://hermitage.hostingradio.ru/hermitage128.mp3");
    }

    @Override
    public String getName() {
        return "radio";
    }

    @Override
    public String getDescription() {
        return "–í–∫–ª—é—á–∏—Ç—å –æ–Ω–ª–∞–π–Ω-—Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏—é";
    }

    @Override
    public List<OptionData> getOptions() {
        return Collections.emptyList(); // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è, –≤—ã–±–æ—Ä —á–µ—Ä–µ–∑ –º–µ–Ω—é
    }

    @Override
    public void execute(SlashCommandInteractionEvent event) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ
        if (!validateVoiceState(event)) {
            return;
        }
        
        // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É
        connectToVoiceChannel(event);
        
        // –°–æ–∑–¥–∞–µ–º –≤—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é —Å —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏—è–º–∏
        StringSelectMenu.Builder menuBuilder = StringSelectMenu.create("radio_select")
            .setPlaceholder("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏—é")
            .setMaxValues(1)
            .setMinValues(1);
            
        // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–∏
        menuBuilder.addOption("–ï–≤—Ä–æ–ø–∞ –ü–ª—é—Å", RADIO_STATIONS.get("–ï–≤—Ä–æ–ø–∞ –ü–ª—é—Å"), "–ü–æ–ø—É–ª—è—Ä–Ω–∞—è —Ä–æ—Å—Å–∏–π—Å–∫–∞—è –º—É–∑—ã–∫–∞, —Ö–∏—Ç—ã");
        menuBuilder.addOption("–†—É—Å—Å–∫–æ–µ –†–∞–¥–∏–æ", RADIO_STATIONS.get("–†—É—Å—Å–∫–æ–µ –†–∞–¥–∏–æ"), "–†–æ—Å—Å–∏–π—Å–∫–∞—è –ø–æ–ø—É–ª—è—Ä–Ω–∞—è –º—É–∑—ã–∫–∞");
        menuBuilder.addOption("–†–∞–¥–∏–æ Energy", RADIO_STATIONS.get("–†–∞–¥–∏–æ Energy"), "–ó–∞—Ä—É–±–µ–∂–Ω—ã–µ —Ö–∏—Ç—ã, —Ç–∞–Ω—Ü–µ–≤–∞–ª—å–Ω–∞—è –º—É–∑—ã–∫–∞");
        menuBuilder.addOption("–•–∏—Ç FM", RADIO_STATIONS.get("–•–∏—Ç FM"), "–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ö–∏—Ç—ã –†–æ—Å—Å–∏–∏ –∏ –ó–∞–ø–∞–¥–∞");
        menuBuilder.addOption("–†–µ—Ç—Ä–æ FM", RADIO_STATIONS.get("–†–µ—Ç—Ä–æ FM"), "–•–∏—Ç—ã 70-—Ö, 80-—Ö, 90-—Ö –≥–æ–¥–æ–≤");
        
        // –î–æ–±–∞–≤–ª—è–µ–º Radio Record
        menuBuilder.addOption("–†–∞–¥–∏–æ –†–µ–∫–æ—Ä–¥", RADIO_STATIONS.get("–†–µ–∫–æ—Ä–¥"), "–ì–ª–∞–≤–Ω—ã–π —Ç–∞–Ω—Ü–µ–≤–∞–ª—å–Ω—ã–π —Ä–∞–¥–∏–æ–∫–∞–Ω–∞–ª –†–æ—Å—Å–∏–∏");
        menuBuilder.addOption("Record: Russian Mix", RADIO_STATIONS.get("Russian Mix"), "–†—É—Å—Å–∫–∏–µ —Ö–∏—Ç—ã –≤ —Ç–∞–Ω—Ü–µ–≤–∞–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–µ");
        menuBuilder.addOption("Record: Deep", RADIO_STATIONS.get("Deep"), "Deep House –º—É–∑—ã–∫–∞");
        menuBuilder.addOption("Record: Techno", RADIO_STATIONS.get("Techno"), "–¢–µ—Ö–Ω–æ –º—É–∑—ã–∫–∞, –º–∏–Ω–∏–º–∞–ª, —Ç–µ—Ö–Ω–æ-—Ö–∞—É—Å");
        menuBuilder.addOption("Record: Trap", RADIO_STATIONS.get("Trap"), "–¢—Ä–∞–ø –º—É–∑—ã–∫–∞ –∏ —ç–ª–µ–∫—Ç—Ä–æ-—Ö–∏–ø-—Ö–æ–ø");
        menuBuilder.addOption("Record: Dubstep", RADIO_STATIONS.get("Dubstep"), "–î–∞–±—Å—Ç–µ–ø, –±–µ–π—Å –∏ —ç–ª–µ–∫—Ç—Ä–æ");
        menuBuilder.addOption("Record: Hardstyle", RADIO_STATIONS.get("Hardstyle"), "–•–∞—Ä–¥—Å—Ç–∞–π–ª –∏ —Ö–∞—Ä–¥–∫–æ—Ä");
        menuBuilder.addOption("Record: Breaks", RADIO_STATIONS.get("Breaks"), "–ë—Ä–µ–π–∫–±–∏—Ç –º—É–∑—ã–∫–∞");
        menuBuilder.addOption("Record: –°—É–ø–µ—Ä–¥–∏—Å–∫–æ—Ç–µ–∫–∞ 90-—Ö", RADIO_STATIONS.get("–°—É–ø–µ—Ä–¥–∏—Å–∫–æ—Ç–µ–∫–∞ 90-—Ö"), "–•–∏—Ç—ã 90-—Ö –≤ —Ç–∞–Ω—Ü–µ–≤–∞–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–µ");
        menuBuilder.addOption("Record: –ì–æ–ø FM", RADIO_STATIONS.get("–ì–æ–ø FM"), "–†—É—Å—Å–∫–∏–π —à–∞–Ω—Å–æ–Ω –∏ –±–ª–∞—Ç–Ω–∞—è –º—É–∑—ã–∫–∞");
        menuBuilder.addOption("Record: –†—É–∫–∏ –í–≤–µ—Ä—Ö!", RADIO_STATIONS.get("–†—É–∫–∏ –í–≤–µ—Ä—Ö!"), "–•–∏—Ç—ã –≥—Ä—É–ø–ø—ã '–†—É–∫–∏ –í–≤–µ—Ä—Ö' –∏ –ø–æ—Ö–æ–∂–∏—Ö –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π");
        menuBuilder.addOption("Record: Hypnotic", RADIO_STATIONS.get("Hypnotic"), "–ì–∏–ø–Ω–æ—Ç–∏—á–µ—Å–∫–∏–π —Ç—Ä–∞–Ω—Å –∏ –ø—Å–∏—Ö–æ–¥–µ–ª–∏–∫–∞");
        menuBuilder.addOption("Record: –†–æ–∫", RADIO_STATIONS.get("–†–æ–∫"), "–†—É—Å—Å–∫–∏–π –∏ –∑–∞—Ä—É–±–µ–∂–Ω—ã–π —Ä–æ–∫");
        menuBuilder.addOption("Record: Chill-Out", RADIO_STATIONS.get("Chill-Out"), "–†–∞—Å—Å–ª–∞–±–ª—è—é—â–∞—è –º—É–∑—ã–∫–∞ –∏ –ª–∞—É–Ω–∂");
        menuBuilder.addOption("Record: Synthwave", RADIO_STATIONS.get("Synthwave"), "–°–∏–Ω—Ç–≤–µ–π–≤, —Ä–µ—Ç—Ä–æ–≤–µ–π–≤ –∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –≤ —Å—Ç–∏–ª–µ 80-—Ö");
        
        // –î–æ–±–∞–≤–ª—è–µ–º –¥—Ä—É–≥–∏–µ —Å—Ç–∞–Ω—Ü–∏–∏
        menuBuilder.addOption("DFM", RADIO_STATIONS.get("DFM"), "–¢–∞–Ω—Ü–µ–≤–∞–ª—å–Ω–∞—è –º—É–∑—ã–∫–∞, –∫–ª—É–±–Ω—ã–µ —Ö–∏—Ç—ã");
        menuBuilder.addOption("–†–∞–¥–∏–æ MAXIMUM", RADIO_STATIONS.get("–†–∞–¥–∏–æ MAXIMUM"), "–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Ä–æ–∫, –Ω–æ–≤–∞—è –∏ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Ä–æ–∫-–º—É–∑—ã–∫–∞");
        menuBuilder.addOption("Lofi Hip Hop", RADIO_STATIONS.get("Lofi Hip Hop"), "–†–∞—Å—Å–ª–∞–±–ª—è—é—â–∏–π –ª–æ—É-—Ñ–∞–π —Ö–∏–ø-—Ö–æ–ø, –∏–¥–µ–∞–ª—å–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã/—É—á–µ–±—ã");
        menuBuilder.addOption("Nightwave Plaza", RADIO_STATIONS.get("Nightwave Plaza"), "–í–µ–π–ø–æ—Ä–≤–µ–π–≤, —Å–∏–Ω—Ç–≤–µ–π–≤ –∏ —Ä–µ—Ç—Ä–æ-—ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞");
        menuBuilder.addOption("–†–∞–¥–∏–æ –≠—Ä–º–∏—Ç–∞–∂", RADIO_STATIONS.get("–†–∞–¥–∏–æ –≠—Ä–º–∏—Ç–∞–∂"), "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –º—É–∑—ã–∫–∞ –∏ –¥–∂–∞–∑");
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é
        event.reply("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏—é –¥–ª—è –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è:")
            .addComponents(ActionRow.of(menuBuilder.build()))
            .queue();
    }

    @Override
    public void onStringSelectInteraction(StringSelectInteractionEvent event) {
        if (event.getComponentId().equals("radio_select")) {
            String selectedUrl = event.getValues().get(0);
            String stationName = findStationNameByUrl(selectedUrl);
            
            // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é –≤—ã–±–æ—Ä–∞
            event.getMessage().delete().queue();
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–∏ (—á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã —É–¥–∞–ª–∏–º)
            event.reply("üéµ –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–∂—É —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏—é: **" + stationName + "**")
                .queue(response -> {
                    // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏—é
                    PlayerManager.getInstance().play(
                        event.getChannel().asTextChannel(),
                        selectedUrl
                    );
                    
                    // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–∏ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
                    response.deleteOriginal().queueAfter(3, TimeUnit.SECONDS);
                });
        }
    }
    
    private String findStationNameByUrl(String url) {
        for (Map.Entry<String, String> station : RADIO_STATIONS.entrySet()) {
            if (station.getValue().equals(url)) {
                return station.getKey();
            }
        }
        return "–†–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏—è";
    }

    private boolean validateVoiceState(IReplyCallback event) {
        Member member = event.getMember();
        GuildVoiceState memberVoiceState = member.getVoiceState();

        if (!memberVoiceState.inAudioChannel()) {
            event.reply("–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ")
                .setEphemeral(true)
                .queue(response -> {
                    response.deleteOriginal().queueAfter(10, TimeUnit.SECONDS);
                });
            return false;
        }
        return true;
    }

    private void connectToVoiceChannel(IReplyCallback event) {
        AudioManager audioManager = event.getGuild().getAudioManager();
        Member member = event.getMember();
        
        if (!audioManager.isConnected()) {
            audioManager.openAudioConnection(member.getVoiceState().getChannel());
        }
    }
} 